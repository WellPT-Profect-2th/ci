name: CI Build and Push

on:
  repository_dispatch:
    types: [trigger-ci]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(github.event.client_payload.services) }}

    steps:
      - name: Checkout dev repo
        uses: actions/checkout@v3
        with:
          repository: WellPT-Profect-2th/dev
          token: ${{ secrets.DEV_REPO_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Load .env
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          set -a
          source .env
          set +a

      - name: Cache Gradle
        if: exists('backend/${{ matrix.service }}/gradlew')
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache pip
        if: exists('backend/${{ matrix.service }}/requirements.txt')
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set tag name
        id: set-tag
        run: |
          echo "tag=${{ github.event.client_payload.sha }}" >> $GITHUB_OUTPUT

      - name: Run tests / build
        run: |
          if [ "${{ matrix.service }}" == "frontend" ]; then
            cd frontend
            npm install
            npm run build
          else
            cd backend/${{ matrix.service }}
            if [ -f "gradlew" ]; then
              ./gradlew test
            elif [ -f "requirements.txt" ]; then
              pip install -r requirements.txt
              pytest
            else
              echo "No test runner found. Skipping test step."
            fi
          fi

      - name: Build Docker image
        run: |
          if [ "${{ matrix.service }}" == "frontend" ]; then
            docker build -t ghcr.io/wellpt-org/frontend-service:${{ steps.set-tag.outputs.tag }} ./frontend
          else
            docker build -t ghcr.io/wellpt-org/${{ matrix.service }}-service:${{ steps.set-tag.outputs.tag }} ./backend/${{ matrix.service }}
          fi

      - name: Push Docker image
        run: |
          if [ "${{ matrix.service }}" == "frontend" ]; then
            docker push ghcr.io/wellpt-org/frontend-service:${{ steps.set-tag.outputs.tag }}
          else
            docker push ghcr.io/wellpt-org/${{ matrix.service }}-service:${{ steps.set-tag.outputs.tag }}
          fi

      - name: Write summary
        run: |
          SERVICE_NAME=${{ matrix.service }}-service
          if [ "${{ matrix.service }}" == "frontend" ]; then
            SERVICE_NAME=frontend-service
          fi

          echo "### ✅ CI Summary for \`${{ matrix.service }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Tag: \`${{ steps.set-tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`ghcr.io/wellpt-org/$SERVICE_NAME:${{ steps.set-tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ✅ Success" >> $GITHUB_STEP_SUMMARY

      - name: Notify Slack
        if: ${{ always() }}
        run: |
          STATUS="✅ Success"
          COLOR="#2eb886"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="❌ Failed"
            COLOR="#e01e5a"
          fi

          SERVICE_NAME="${{ matrix.service }}"
          TAG="${{ steps.set-tag.outputs.tag }}"
          REPO="WellPT-Profect-2th/ci"
          RUN_ID="${{ github.run_id }}"
          LOG_URL="https://github.com/$REPO/actions/runs/$RUN_ID"

          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"attachments\": [
              {
                \"color\": \"$COLOR\",
                \"title\": \"[CI] $SERVICE_NAME Build $STATUS\",
                \"fields\": [
                  { \"title\": \"Service\", \"value\": \"$SERVICE_NAME\", \"short\": true },
                  { \"title\": \"Tag\", \"value\": \"$TAG\", \"short\": true },
                  { \"title\": \"Logs\", \"value\": \"<${LOG_URL}|View Logs>\", \"short\": false }
                ],
                \"footer\": \"GitHub Actions • CI Pipeline\",
                \"ts\": $(date +%s)
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
