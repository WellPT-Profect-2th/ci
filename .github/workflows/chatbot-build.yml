name: Chatbot CI Build

on:
  workflow_dispatch:
    inputs:
      service:
        description: '서비스 이름'
        required: true
        default: 'chatbot'
      sha:
        description: '빌드할 커밋 SHA'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          repository: WellPT-Profect-2th/dev
          token: ${{ secrets.DEV_REPO_PAT }}

      - name: Set environment variables
        run: |
          {
            echo "REDIS_SERVER=${{ vars.REDIS_SERVER }}"
            echo "REDIS_PORT=${{ vars.REDIS_PORT }}"
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"
            echo "PRODUCT_SERVER_ADDR=${{ vars.PRODUCT_SERVER_ADDR }}"
            echo "PRODUCT_SERVER_PORT=${{ vars.PRODUCT_SERVER_PORT }}"
          } | tee -a .env >> $GITHUB_ENV

      - name: Run tests
        run: |
          cd ./backend/${{ inputs.service }}
          pip install -r requirements.txt
          pip install pytest
          
          for d in exception models routers services tests; do
            touch "$d/__init__.py"
          done

          PYTHONPATH=. pytest

  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          repository: WellPT-Profect-2th/dev
          token: ${{ secrets.DEV_REPO_PAT }}

      - name: Docker build
        run: |
          docker build -t ghcr.io/wellpt-profect-2th/${{ inputs.service }}:${{ inputs.sha }} backend/${{ inputs.service }}
          docker tag ghcr.io/wellpt-profect-2th/${{ inputs.service }}:${{ inputs.sha }} ghcr.io/wellpt-profect-2th/${{ inputs.service }}:latest

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/wellpt-profect-2th/${{ inputs.service }}:${{ inputs.sha }}
          docker push ghcr.io/wellpt-profect-2th/${{ inputs.service }}:latest

  update_tag_in_ops:
    run: |
      git config --global user.name "github-actions"
      git config --global user.email "actions@github.com"

      git clone https://x-access-token:${{ secrets.OPS_REPO_PAT }}@github.com/WellPT-Profect-2th/ops.git
      cd ops/${{ inputs.service }}

      # 변경 (이미지 태그 업데이트)
      yq eval ".images[0].newTag = \"${{ inputs.sha }}\"" -i kustomization.yaml

      git add kustomization.yaml
      git commit -m "ci: update ${{ inputs.service }} image tag to ${{ inputs.sha }}"
      git push
