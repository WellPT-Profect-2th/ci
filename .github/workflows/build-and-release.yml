name: Build and Release

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      sha:
        required: true
        type: string
    secrets:
      DEV_REPO_PAT:
        required: true
      OPS_REPO_PAT:
        required: true
      GHCR_PAT:
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          repository: WellPT-Profect-2th/dev
          token: ${{ secrets.DEV_REPO_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ inputs.service }}-latest

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Docker build and push
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then
            BUILD_PATH="frontend"
            BUILD_ARGS="
              --build-arg NEXT_PUBLIC_KAKAO_REST_API_KEY=${{ vars.NEXT_PUBLIC_KAKAO_REST_API_KEY }}
              --build-arg NEXT_PUBLIC_NAVER_CLIENT_ID=${{ vars.NEXT_PUBLIC_NAVER_CLIENT_ID }}
              --build-arg NEXT_PUBLIC_NAVER_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_SECRET }}
              --build-arg NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ vars.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
              --build-arg NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_SECRET }}
              --build-arg NEXT_PUBLIC_SOCIAL_REDIRECT_URI=${{ vars.NEXT_PUBLIC_SOCIAL_REDIRECT_URI }}
              --build-arg NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
            "
          else
            BUILD_PATH="backend/${{ inputs.service }}"
            BUILD_ARGS=""
          fi

          echo "Building $BUILD_PATH for Multi-arch platforms"

          docker buildx build \
            --platform linux/amd64 \
            --tag ghcr.io/wellpt-profect-2th/${{ inputs.service }}:${{ inputs.sha }} \
            --tag ghcr.io/wellpt-profect-2th/${{ inputs.service }}:latest \
            --push \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            $BUILD_ARGS \
            $BUILD_PATH

      - name: Move new cache into place
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update_tag_in_ops:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Update image tag in values.yaml
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git clone https://x-access-token:${{ secrets.OPS_REPO_PAT }}@github.com/WellPT-Profect-2th/ops.git
          cd ops/services/${{ inputs.service }}

          yq eval ".image.tag = \"${{ inputs.sha }}\"" -i values.yaml

          git add values.yaml
          git commit -m "ci: update ${{ inputs.service }} image tag to ${{ inputs.sha }}"
          git push
